<tool id="ucsb_raxml_read_placement" name="RAxML read placement" version="1.0.0">
  <description>RAxML read placement - Produces a labeled tree from RAxML.</description>
  <requirements>
    <requirement type="package">raxml</requirement>
  </requirements>
  <command>
    raxmlHPC-PTHREADS-SSE3 -f v -s $alignment -m PROTGAMMAWAG -t $tree -n EPA_TEST -T 8 > $stdout 2>&amp;1
  </command>
  <inputs>
    <param format="txt" name="alignment" type="data" label="Alignment.phy file"/>
    <param format="txt" name="tree" type="data" label="RAxML tree file"/>
  </inputs>
  <outputs>
    <data format="txt" name="stdout" label="${tool.name} on ${on_string}: stdout" />
    <data format="txt" name="RAxML_classification.EPA_TEST" label="${tool.name} on ${on_string}: RAxML_classification.EPA_TEST" from_work_dir="RAxML_classification.EPA_TEST" />
    <data format="txt" name="RAxML_classificationLikelihoodWeights.EPA_TEST" label="${tool.name} on ${on_string}: RAxML_classificationLikelihoodWeights.EPA_TEST" from_work_dir="RAxML_classificationLikelihoodWeights.EPA_TEST" />
    <data format="txt" name="RAxML_info.EPA_TEST" label="${tool.name} on ${on_string}: RAxML_info.EPA_TEST" from_work_dir="RAxML_info.EPA_TEST" />
    <data format="txt" name="RAxML_labelledTree.EPA_TEST" label="${tool.name} on ${on_string}: RAxML_labelledTree.EPA_TEST" from_work_dir="RAxML_labelledTree.EPA_TEST" />
    <data format="txt" name="RAxML_originalLabelledTree.EPA_TEST" label="${tool.name} on ${on_string}: RAxML_originalLabelledTree.EPA_TEST" from_work_dir="RAxML_originalLabelledTree.EPA_TEST" />
  </outputs>
  <tests>
  </tests>
    <help>
**What it does**

This tool creates a labeled tree from an alignment file (in phylipE format) and a tree in nexus format. Any sequences found in the aligment that are not on the tree will be placed on the tree using ML, according the the EPA algorithm of Berger et al.

------

**Inputs**

1. Input file is a RAxML compatible text file. This can be generated by Osiris tools from an aligned fasta file with fasta2phylipE or from a PHYTAB format file with phylocatenator.
2. Second input file is a phylogenetic tree file in nexus format. This can be generated by RAxML or other programs.

------

**Outputs**

RAxML writes the resulting tree file in newick text format, which can be viewed in Osiris with TreeVector (of the mothur package). In addition, if bootstrapping was selected, the individual bootstrap trees and the ML tree with support are written as separate newick files.

-------    

**Additional Information**

  The command this tool runs is:
  raxmlHPC-PTHREADS-SSE3 -f v -s $alignment -m PROTGAMMAWAG -t $tree -n EPA_TEST -T 8

  Which specifies 8 concurrent threads with -T 8. Change the xml if you want to call different numbers of threads.  If using pbs or other job runner, make sure universe.ini file is set to match the number of threads requested.

  raxml Home Page.
  http://www.exelixis-lab.org/software.html
   
-------    

**Citations**   

This tool is part of the Osiris Phylogenetics Tool Package for Galaxy. If you make extensive use of this tool in a publication, please consider citing the following.

Current Osiris Citation is here

http://osiris-phylogenetics.blogspot.com/2012/10/citation.html

Additional Citations for this tool

S.A. Berger, D. Krompass. Stamatakis: "Performance, Accuracy and Web-Server for Evolutionary Placement of Short Sequence Reads under maximum-likelihood". In Systematic Biology 60(3):291-302, 2011.

Stamatakis, A. (2006). RAxML-VI-HPC: maximum likelihood-based phylogenetic analyses with thousands of taxa and mixed models. Bioinformatics.
http://bioinformatics.oxfordjournals.org/content/22/21/2688.short



    </help>
</tool>
